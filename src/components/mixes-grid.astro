---
import { getCollection, render } from "astro:content";
import { formatShortDate } from "../lib/utils";

const allMixes = (await getCollection("mixes")).filter(
  (mix) => !mix.data.isDraft
);
---

<div>
  <ul class="mt-4 sm:mt-12 flex flex-col gap-16 sm:gap-8">
    {
      allMixes.length === 0 && (
        <p class="text-zinc-400">There are mixes available at the moment.</p>
      )
    }
    {
      allMixes.map((mix, i) => (
        <li class=" transition-transform duration-300 ease-in-out  text-zinc-100">
          <div class="grid grid-cols-1 sm:grid-cols-3 gap-4 justify-between items-start">
            <div class="flex flex-col items-center">
              {mix.data.cover && (
                <a href={mix.data.link}>
                  <div class="overflow-hidden rounded-lg shadow-lg mb-4 sm:mb-0 group">
                    <img
                      src={mix.data.cover}
                      alt={mix.data.title ?? "Mix cover"}
                      class="aspect-[1/1] object-center object-cover transition-transform duration-300 ease-in-out group-hover:scale-110"
                    />
                  </div>
                </a>
              )}
            </div>
            <div class="flex flex-col h-full  col-span-1 sm:col-span-2">
              <a href={`/mixes/${mix.id}`}>
                <h2 class="text-lg sm:text-3xl md:text-4xl">
                  {mix.data.title}
                </h2>
                <h3 class="text-sm sm:text-xl md:text-2xl">
                  {mix.data.dj +
                    (mix.data.otherDJs.length > 0
                      ? `, ${mix.data.otherDJs.join(", ")}`
                      : "")}
                </h3>
              </a>
              <p class="text-sm sm:text-base mt-2">
                Recorded at {mix.data.location} on{" "}
                {formatShortDate(mix.data.date)}.
              </p>
            </div>
          </div>
        </li>
      ))
    }
  </ul>
</div>
