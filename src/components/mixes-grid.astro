---
import { getCollection, render } from "astro:content";
import { formatShortDate } from "../lib/utils";

const allMixes = (await getCollection("mixes"))
  .filter((mix) => !mix.data.isDraft)
  .sort(
    (a, b) => new Date(b.data.date).getTime() - new Date(a.data.date).getTime()
  );
---

<div>
  <ul
    class="mt-4 sm:mt-12 grid grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-8 sm:gap-16"
  >
    {
      allMixes.length === 0 && (
        <p class="text-zinc-400">No mixes available at the moment.</p>
      )
    }
    {
      allMixes.map((mix, i) => (
        <li class="transition-transform duration-300 ease-in-out">
          {mix.data.cover && (
            <a href={mix.data.link}>
              <div class="overflow-hidden rounded-lg shadow-lg mb-4 sm:mb-0 group">
                <img
                  src={mix.data.cover}
                  alt={mix.data.title ?? "Mix cover"}
                  class="aspect-[1/1] object-center object-cover transition-transform duration-300 ease-in-out group-hover:scale-110"
                />
              </div>
            </a>
          )}
          <div class="pt-4 w-full text-center text-zinc-100">
            <a href={mix.data.link}>
              <h2 class="text-xl">{mix.data.title}</h2>
              <h3 class="text-lg">
                {mix.data.dj +
                  (mix.data.otherDJs.length > 0
                    ? `, ${mix.data.otherDJs.join(", ")}`
                    : "")}
              </h3>
              <p>
                Recorded at {mix.data.location} on{" "}
                {formatShortDate(mix.data.date)}.
              </p>
            </a>
          </div>
        </li>
      ))
    }
  </ul>
</div>
